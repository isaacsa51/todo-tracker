{"version":3,"sources":["components/AddTask.js","components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","App.js","reportWebVitals.js","index.js"],"names":["AddTask","onAdd","useState","text","setText","day","setDay","reminder","setReminder","className","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Button","color","title","onClick","style","backgroundColor","defaultProps","Header","toggleShow","Task","task","onDelete","onToggle","onDoubleClick","id","cursor","Tasks","tasks","map","App","showForm","setShowForm","setTasks","Math","floor","random","newTask","console","log","lengthj","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a84d326f.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n\tconst [text, setText] = useState(\"\");\r\n\tconst [day, setDay] = useState(\"\");\r\n\tconst [reminder, setReminder] = useState(false);\r\n\r\n\tconst onSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (!text) {\r\n\t\t\talert(\"Add a valid task!\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tonAdd({ text, day, reminder });\r\n\r\n\t\t//Clear form\r\n\t\tsetText(\"\");\r\n\t\tsetDay(\"\");\r\n\t\tsetReminder(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form className=\"add-form\" onSubmit={onSubmit}>\r\n\t\t\t<div className=\"form-control\">\r\n\t\t\t\t<label>Task</label>\r\n\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Add Task\"\r\n\t\t\t\t\tvalue={text}\r\n\t\t\t\t\tonChange={(e) => setText(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"form-control\">\r\n\t\t\t\t<label>Day & Time</label>\r\n\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Add date of the task\"\r\n\t\t\t\t\tvalue={day}\r\n\t\t\t\t\tonChange={(e) => setDay(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"form-control form-control-check\">\r\n\t\t\t\t<label>Set reminder</label>\r\n\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\tchecked={reminder}\r\n\t\t\t\t\tvalue={reminder}\r\n\t\t\t\t\tonChange={(e) => setReminder(e.currentTarget.checked)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<input type=\"submit\" value=\"Save task\" className=\"btn btn-block\" />\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default AddTask;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ color, title, onClick }) => {\r\n\treturn (\r\n\t\t<button\r\n\t\t\tonClick={onClick}\r\n\t\t\tclassName=\"btn\"\r\n\t\t\tstyle={{ backgroundColor: color }}\r\n\t\t>\r\n\t\t\t{title}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nButton.defaultProps = {\r\n\tcolor: \"black\",\r\n};\r\n\r\nButton.propTypes = {\r\n\ttext: PropTypes.string,\r\n\tcolor: PropTypes.string,\r\n\tonClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import Button from \"./Button\";\r\n\r\nconst Header = ({ onAdd, toggleShow }) => {\r\n\treturn (\r\n\t\t<header className=\"header\">\r\n\t\t\t<h1>TODO Tracker</h1>\r\n\t\t\t<Button\r\n\t\t\t\tonClick={onAdd}\r\n\t\t\t\tcolor={toggleShow ? \"red\" : \"green\"}\r\n\t\t\t\ttitle={toggleShow ? \"Close\" : \"Add\"}\r\n\t\t\t/>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import { FaTimes } from \"react-icons/fa\";\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`task ${task.reminder ? \"reminder\" : \"\"}`}\r\n\t\t\tonDoubleClick={() => onToggle(task.id)}\r\n\t\t>\r\n\t\t\t<h3>\r\n\t\t\t\t{task.text}{\" \"}\r\n\t\t\t\t<FaTimes\r\n\t\t\t\t\tonClick={() => onDelete(task.id)}\r\n\t\t\t\t\tstyle={{ color: \"red\", cursor: \"pointer\" }}\r\n\t\t\t\t/>\r\n\t\t\t</h3>\r\n\t\t\t<p>{task.text}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Task;\r\n","import Task from \"./Task\";\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{tasks.map((task) => (\r\n\t\t\t\t<Task\r\n\t\t\t\t\tkey={task.id}\r\n\t\t\t\t\ttask={task}\r\n\t\t\t\t\tonDelete={onDelete}\r\n\t\t\t\t\tonToggle={onToggle}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Tasks;\r\n","import { useState } from \"react\";\nimport AddTask from \"./components/AddTask\";\n\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\n\nconst App = () => {\n\tconst [showForm, setShowForm] = useState(false);\n\tconst [tasks, setTasks] = useState([\n\t\t{\n\t\t\tid: 1,\n\t\t\ttitle: \"dsasdfasdf\",\n\t\t\ttext: \"fdfsfasdfadf\",\n\t\t\tday: \"1/12/2011\",\n\t\t\treminder: true,\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\ttitle: \"asdfasdfd\",\n\t\t\ttext: \"asdfasdfasd\",\n\t\t\tday: \"2/12/2011\",\n\t\t\treminder: false,\n\t\t},\n\t\t{\n\t\t\tid: 3,\n\t\t\ttitle: \"asdfasdfd\",\n\t\t\ttext: \"asdfasdfasd\",\n\t\t\tday: \"2/12/2011\",\n\t\t\treminder: false,\n\t\t},\n\t]);\n\n\t//TODO: CHANGE EVERY FUNCTION TO A MVP PROJECT\n\t//Add task\n\tconst addTask = (task) => {\n\t\t//Created a random ID just to know what task is...\n\t\tconst id = Math.floor(Math.random() * 1000) + 1;\n\t\tconst newTask = { id, ...task };\n\n\t\tsetTasks([...tasks, newTask]);\n\n\t\tconsole.log(task);\n\t};\n\n\t//Delete Task\n\tconst deleteTask = (id) => {\n\t\tsetTasks(tasks.filter((task) => task.id !== id));\n\t};\n\n\tconst toggleReminder = (id) => {\n\t\tsetTasks(\n\t\t\ttasks.map((task) =>\n\t\t\t\ttask.id === id ? { ...task, reminder: !task.reminder } : task\n\t\t\t)\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<Header onAdd={() => setShowForm(!showForm)} toggleShow={showForm} />\n\n\t\t\t{showForm && <AddTask onAdd={addTask} />}\n\n\t\t\t{tasks.lengthj > 0 ? (\n\t\t\t\t<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n\t\t\t) : (\n\t\t\t\t\"No tasks to do...\"\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}